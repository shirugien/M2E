---
import Layout from '../../../layouts/Layout.astro';
export const prerender = false;

// Récupération des formations depuis l'API
let formations = [];
let error = null;

try {
  const response = await fetch(`${Astro.url.origin}/api/formations`);
  const data = await response.json();
  if (data.success) {
    formations = data.formations;
  } else {
    error = data.error;
  }
} catch (err) {
  error = err.message;
}
---

<Layout title="Gestion des formations - Administration">
  <div class="min-h-screen bg-gray-50">
    <!-- Header Admin -->
    <header class="bg-white shadow-sm border-b">
      <div class="container py-4">
        <div class="flex items-center justify-between">
          <div class="flex items-center space-x-4">
            <a href="/admin" class="text-secondary-600 hover:text-primary-600">← Retour</a>
            <h1 class="text-2xl font-bold text-primary-800">Gestion des formations</h1>
          </div>
          <a href="/admin/formations/nouvelle" class="btn btn-primary">Nouvelle formation</a>
        </div>
      </div>
    </header>

    <div class="container py-8">
      <!-- Filtres -->
      <div class="bg-white p-6 rounded-lg shadow-soft mb-6">
        <form id="filterForm" class="flex flex-wrap gap-4 items-center" method="GET">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Type</label>
            <select name="type" id="typeFilter" class="border border-gray-300 rounded-md px-3 py-2">
              <option>Tous</option>
              <option>Techniques</option>
              <option>Science</option>
              <option>Santé</option>
              <option>Droit</option>
              <option>Economie</option>
            </select>
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Statut</label>
            <select name="status" class="border border-gray-300 rounded-md px-3 py-2">
              <option>Tous</option>
              <option>publié</option>
              <option>brouillon</option>
              <option>archivé</option>
            </select>
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Recherche</label>
            <input name="search" type="text" placeholder="Nom de la formation..." class="border border-gray-300 rounded-md px-3 py-2">
          </div>
          <div class="mt-6">
            <button type="submit" class="btn btn-outline">Filtrer</button>
          </div>
        </form>
      </div>

      <!-- Liste des formations -->
      <div class="bg-white rounded-lg shadow-soft overflow-hidden">
          {error ? (
            <div class="py-8 text-center text-red-600">
              <p>Erreur lors du chargement des formations : {error}</p>
            </div>
          ) : formations.length === 0 ? (
            <div class="py-8 text-center text-gray-600">
              <p>Aucune formation trouvée.</p>
            </div>
          ) : (
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
              <thead class="bg-gray-50">
                <tr>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Formation
                  </th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Type
                  </th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Durée
                  </th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Étudiants
                  </th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Statut
                  </th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Actions
                  </th>
                </tr>
              </thead>
              <tbody class="bg-white divide-y divide-gray-200">
                {formations.map(formation => (
                  <tr class="hover:bg-gray-50">
                    <td class="px-6 py-4 whitespace-nowrap">
                      <div class="text-sm font-medium text-gray-900">{formation.title}</div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      {formation.type || 'Non spécifié'}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      {formation.duration || 'Non spécifié'}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      {formation.students || 0} étudiants
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                      <span class={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${
                        formation.status === 'published' 
                          ? 'bg-green-100 text-green-800' 
                          : formation.status === 'archived'
                          ? 'bg-gray-200 text-gray-700'
                          : 'bg-yellow-100 text-yellow-800'
                      }`}>
                        {formation.status === 'published' ? 'Publié' : formation.status === 'archived' ? 'Archivé' : 'Brouillon'}
                      </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2">
                      <a href={`/admin/formations/modifier/${formation.id}`} class="text-indigo-600 hover:text-indigo-900">
                        Modifier
                      </a>
                      <a href={`/formation/${formation.title.toLowerCase().replace(/ /g, '-')}`} class="text-green-600 hover:text-green-900" target="_blank">
                        Voir
                      </a>
                      <button class="text-red-600 hover:text-red-900" onclick={`deleteFormation(${formation.id})`}>
                        Supprimer
                      </button>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
        </div>
          )}
      </div>
    </div>
  </div>

  <script>
    async function deleteFormation(id) {
      if (!confirm('Êtes-vous sûr de vouloir supprimer cette formation ?')) {
        return;
      }

      try {
        const response = await fetch('/api/formations', {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ id })
        });

        const data = await response.json();
        
        if (data.success) {
          alert('Formation supprimée avec succès');
          window.location.reload();
        } else {
          alert('Erreur lors de la suppression : ' + data.message);
        }
      } catch (error) {
        console.error('Erreur:', error);
        alert('Erreur lors de la suppression de la formation');
      }
    }
  </script>
</Layout>